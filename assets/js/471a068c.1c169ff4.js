"use strict";(self.webpackChunkmy_demo=self.webpackChunkmy_demo||[]).push([[4963],{4088:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>c,contentTitle:()=>o,default:()=>h,frontMatter:()=>t,metadata:()=>i,toc:()=>d});const i=JSON.parse('{"id":"RENESAS RZ-G2L/yocto_important","title":"2.3 Yocto Build Project Notes","description":"IMPORTANT FILES/FOLDERS IN YOCTO BUILD","source":"@site/docs/RENESAS RZ-G2L/yocto_important.md","sourceDirName":"RENESAS RZ-G2L","slug":"/RENESAS RZ-G2L/yocto_important","permalink":"/jayden/docs/RENESAS RZ-G2L/yocto_important","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/RENESAS RZ-G2L/yocto_important.md","tags":[],"version":"current","sidebarPosition":3,"frontMatter":{"sidebar_position":3},"sidebar":"tutorialSidebar","previous":{"title":"2.2 Prompting a \\"Hello World\\" Program on the RZG2L Board Using Yocto Project","permalink":"/jayden/docs/RENESAS RZ-G2L/helloworld_ttl"},"next":{"title":"GSTREAMER","permalink":"/jayden/docs/category/gstreamer"}}');var r=s(4848),l=s(8453);const t={sidebar_position:3},o="2.3 Yocto Build Project Notes",c={},d=[{value:"IMPORTANT FILES/FOLDERS IN YOCTO BUILD",id:"important-filesfolders-in-yocto-build",level:2},{value:"<strong>Deployment of Output Files</strong>",id:"deployment-of-output-files",level:3},{value:"<strong>Configuration Directory</strong>",id:"configuration-directory",level:3},{value:"<strong>Recipes and Build Artifacts</strong>",id:"recipes-and-build-artifacts",level:3},{value:"<strong>Root Filesystem of the Build</strong>",id:"root-filesystem-of-the-build",level:3},{value:"<strong>BitBake Recipes (<code>*.bb</code> Files)</strong>",id:"bitbake-recipes-bb-files",level:3},{value:"IMPORTANT COMMANDS IN YOCTO BUILD",id:"important-commands-in-yocto-build",level:2},{value:"<strong>TEMPLATECONF Command</strong>",id:"templateconf-command",level:3},{value:"<strong>SCP for File Transfers</strong>",id:"scp-for-file-transfers",level:3}];function a(e){const n={br:"br",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,l.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"23-yocto-build-project-notes",children:"2.3 Yocto Build Project Notes"})}),"\n",(0,r.jsx)(n.h2,{id:"important-filesfolders-in-yocto-build",children:"IMPORTANT FILES/FOLDERS IN YOCTO BUILD"}),"\n",(0,r.jsx)(n.h3,{id:"deployment-of-output-files",children:(0,r.jsx)(n.strong,{children:"Deployment of Output Files"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Location"}),":",(0,r.jsx)(n.br,{}),"\n",(0,r.jsx)(n.code,{children:"<work dir>/build/tmp/deploy/images/smarc-rzg2l/"})]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Files"}),":"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"*.wic.bmap"}),": Binary map file used by ",(0,r.jsx)(n.code,{children:"bmaptool"})," to efficiently write the disk image to an SD card."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"*.wic.gz"}),": Compressed disk image containing the final Linux system."]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Importance"}),":"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"These files represent the final build output and are essential for deploying the system to the RZ/G2L board."}),"\n",(0,r.jsxs)(n.li,{children:["The ",(0,r.jsx)(n.code,{children:"wic.gz"})," file is the image written to the SD card, while the ",(0,r.jsx)(n.code,{children:"wic.bmap"})," file speeds up the process by skipping unnecessary blocks."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h3,{id:"configuration-directory",children:(0,r.jsx)(n.strong,{children:"Configuration Directory"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Location"}),":",(0,r.jsx)(n.br,{}),"\n",(0,r.jsx)(n.code,{children:"<work dir>/build/conf/"})]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Files"}),":"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"bblayers.conf"}),": Lists the layers included in the build."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"local.conf"}),": Contains build-specific settings like the machine type, image type, and additional packages."]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Importance"}),":"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.code,{children:"bblayers.conf"})}),": Used to add or remove Yocto layers, such as ",(0,r.jsx)(n.code,{children:"meta-qt5"})," for Qt applications."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.code,{children:"local.conf"})}),": Customizes build settings, enabling features like SSH, additional packages, or specific image configurations."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h3,{id:"recipes-and-build-artifacts",children:(0,r.jsx)(n.strong,{children:"Recipes and Build Artifacts"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Location"}),":",(0,r.jsx)(n.br,{}),"\n",(0,r.jsx)(n.code,{children:"<work dir>/build/tmp/work/aarch64-poky-linux/"})]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Contents"}),":"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Intermediate build outputs, logs, and artifacts for recipes."}),"\n",(0,r.jsx)(n.li,{children:"Temporary files and debugging data for software components."}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Importance"}),":"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Critical for troubleshooting build failures. If a recipe fails, logs in this directory can help diagnose the issue."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h3,{id:"root-filesystem-of-the-build",children:(0,r.jsx)(n.strong,{children:"Root Filesystem of the Build"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Location"}),":",(0,r.jsx)(n.br,{}),"\n",(0,r.jsx)(n.code,{children:"<work dir>/build/tmp/work/smarc_rzg2l-poky-linux/core-image-qt/1.0-r0/rootfs/"})]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Contents"}),":"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Represents the root filesystem (",(0,r.jsx)(n.code,{children:"/"}),") included in the final image."]}),"\n",(0,r.jsx)(n.li,{children:"Contains binaries, libraries, and configuration files."}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Importance"}),":"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Enables verification of built packages before writing the image to an SD card or booting the system."}),"\n",(0,r.jsx)(n.li,{children:"Useful for quickly inspecting the Linux image's contents."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h3,{id:"bitbake-recipes-bb-files",children:(0,r.jsxs)(n.strong,{children:["BitBake Recipes (",(0,r.jsx)(n.code,{children:"*.bb"})," Files)"]})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Purpose"}),":"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Define steps, dependencies, and outputs for building software components or images."}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Importance"}),":"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Recipes are the core of the Yocto build system, instructing BitBake on how to fetch, compile, and package software."}),"\n",(0,r.jsxs)(n.li,{children:["Example: The ",(0,r.jsx)(n.code,{children:"core-image-qt.bb"})," recipe specifies which components to include in a Qt-based image."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"important-commands-in-yocto-build",children:"IMPORTANT COMMANDS IN YOCTO BUILD"}),"\n",(0,r.jsx)(n.h3,{id:"templateconf-command",children:(0,r.jsx)(n.strong,{children:"TEMPLATECONF Command"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Command"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"TEMPLATECONF=$PWD/meta-renesas/meta-rzg2l/docs/template/conf/ source poky/oe-init-build-env build\n"})}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Importance"}),":"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Sets up the Yocto build environment by loading the necessary templates and configurations."}),"\n",(0,r.jsx)(n.li,{children:"Must be run each time the build environment is initialized."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h3,{id:"scp-for-file-transfers",children:(0,r.jsx)(n.strong,{children:"SCP for File Transfers"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Command"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"scp /path/to/local/file username@remote_host:/path/to/remote/destination\n"})}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Importance"}),":"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Simplifies transferring files (e.g., images, logs) between the build host and the target device or remote server."}),"\n",(0,r.jsx)(n.li,{children:"Commonly used to upload the final image for deployment."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.hr,{})]})}function h(e={}){const{wrapper:n}={...(0,l.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(a,{...e})}):a(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>t,x:()=>o});var i=s(6540);const r={},l=i.createContext(r);function t(e){const n=i.useContext(l);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:t(e.components),i.createElement(l.Provider,{value:n},e.children)}}}]);